# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.This scalar is serialized to a string in ISO 8601 format and parsed from a string in ISO 8601 format.
"""
scalar DateTimeISO

input ForgotPasswordInput {
  email: String!
}

type GetUserProfileOutput {
  body: GetUserProfileOutputBody!
  environment: String!
  message: String!
  success: Boolean!
}

type GetUserProfileOutputBody {
  accountLockedAt: DateTimeISO
  active: Boolean!
  createdAt: DateTimeISO
  dob: String!
  email: String!
  failedLoginCount: Int!
  firstName: String!
  id: ID!
  lastName: String!
  phoneNumber: String!
  role: Role!
  twoFA: Boolean!
  updatedAt: DateTimeISO
  verified: Boolean!
}

type GraphQLBaseResponse {
  environment: String!
  message: String!
  success: Boolean!
}

type HealthOutput {
  status: String!
}

type Mutation {
  forgotPassword(forgotPasswordInput: ForgotPasswordInput!): GraphQLBaseResponse!
  resetPassword(resetPasswordInput: ResetPasswordInput!): GraphQLBaseResponse!
  signUp(signUpInput: SignUpInput!): GraphQLBaseResponse!
  uploadUserProfileImage(file: Upload!): GraphQLBaseResponse!
  verify(verifyInput: VerifyInput!): GraphQLBaseResponse!
}

type Query {
  getUserProfile: GetUserProfileOutput!
  health: HealthOutput!
  refreshToken(refreshToken: String!): RefreshTokenOutput!
  signin(email: String!, password: String!): SignInOutput!
  verifyLink(email: String!, password: String!): GraphQLBaseResponse!
}

type RefreshTokenOutput {
  body: RefreshTokenOutputBody!
  environment: String!
  message: String!
  success: Boolean!
}

type RefreshTokenOutputBody {
  accessToken: String!
  refreshToken: String!
}

input ResetPasswordInput {
  newPassword: String!
  token: String!
}

"""User Role"""
enum Role {
  ADMIN
  SUPER_ADMIN
  USER
}

type SignInOutput {
  body: SignInOutputBody!
  environment: String!
  message: String!
  success: Boolean!
}

type SignInOutputBody {
  accessToken: String!
  refreshToken: String!
}

input SignUpInput {
  dob: String!
  email: String!
  firstName: String!
  lastName: String!
  password: String!
  phoneNumber: String!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input VerifyInput {
  token: String!
}